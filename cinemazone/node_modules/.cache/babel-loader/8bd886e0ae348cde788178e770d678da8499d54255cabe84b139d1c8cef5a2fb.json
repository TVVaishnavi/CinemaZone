{"ast":null,"code":"var _s = $RefreshSig$();\nconst useController = () => {\n  _s();\n  const navigate = useNavigate();\n  const [userDetail, setUserDetail] = useState(null);\n  const [userLogin, setUserLogin] = useState(false);\n  const [isAdmin, setAdmin] = useState(false);\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchDetails, setSearchDetails] = useState(null);\n  const [TheatreResult, setTheatreResults] = useState([]);\n  const [selectedTheatre, setSelectedTheatre] = useState(null);\n  const [selectedShowtime, setSelectedShowtime] = useState(null);\n  const signup = async user => {\n    try {\n      const response = await api.post(\"/register\", user);\n      alert(response.data.message);\n      if (response.data.permission) navigate(\"/login\");\n    } catch (err) {\n      var _err$response, _err$response$data;\n      alert(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Signup failed\");\n    }\n  };\n  const login = async userData => {\n    try {\n      const response = await api.post(\"/user/login\", userData);\n      const data = response.data;\n      if (!data || !data.role) return {\n        success: false,\n        message: \"Invalid response from server\"\n      };\n      saveToken(data.token);\n      saveUser(userData);\n      setAdmin(data.role === \"admin\");\n      navigate(data.role === \"admin\" ? \"/adminhome\" : \"/userhome\");\n      return {\n        success: true,\n        data\n      };\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      return {\n        success: false,\n        message: ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || \"Network error. Please try again.\"\n      };\n    }\n  };\n  const findUser = () => {\n    const user = localStorage.getItem(\"userdetail\");\n    if (user) {\n      setUserDetail(JSON.parse(user));\n      setUserLogin(true);\n    } else {\n      setUserLogin(false);\n    }\n  };\n  const saveUser = user => localStorage.setItem(\"userdetail\", JSON.stringify(user));\n  const saveToken = token => localStorage.setItem(\"usertoken\", token);\n  useEffect(() => {\n    findUser();\n    return () => {}; // ✅ Cleanup function to prevent errors\n  }, []);\n  const SearchMovie = async movieName => {\n    try {\n      var _response$data, _response$data$movie;\n      const response = await api.get(`/movies/name/${movieName}`);\n      if ((_response$data = response.data) !== null && _response$data !== void 0 && (_response$data$movie = _response$data.movie) !== null && _response$data$movie !== void 0 && _response$data$movie.length) {\n        setSearchResults(response.data.movie);\n        setSearchDetails(movieName);\n        navigate(\"/MovieResult\", {\n          state: {\n            movies: response.data.movie\n          }\n        });\n      } else {\n        console.log(\"No movies found.\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const SearchTheatres = async movieTitle => {\n    try {\n      var _response$data2, _response$data2$theat;\n      const response = await api.get(`/movies/${movieTitle}/theatres`);\n      if ((_response$data2 = response.data) !== null && _response$data2 !== void 0 && (_response$data2$theat = _response$data2.theatres) !== null && _response$data2$theat !== void 0 && _response$data2$theat.length) {\n        setTheatreResults(response.data.theatres);\n        setSearchDetails(movieTitle);\n        navigate(\"/TheatreResult\", {\n          state: {\n            theatres: response.data.theatres\n          }\n        });\n      } else {\n        console.log(\"No theatres found for this movie.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching theatre data:\", error);\n    }\n  };\n  return {\n    signup,\n    login,\n    userDetail,\n    userLogin,\n    isAdmin,\n    SearchMovie,\n    SearchTheatres,\n    searchResults,\n    searchDetails,\n    selectedTheatre,\n    selectedShowtime\n  };\n};\n_s(useController, \"P66IoYTLafOrKN74dGK7eTDZzBw=\", true);\nexport default useController;","map":{"version":3,"names":["useController","_s","navigate","useNavigate","userDetail","setUserDetail","useState","userLogin","setUserLogin","isAdmin","setAdmin","searchResults","setSearchResults","searchDetails","setSearchDetails","TheatreResult","setTheatreResults","selectedTheatre","setSelectedTheatre","selectedShowtime","setSelectedShowtime","signup","user","response","api","post","alert","data","message","permission","err","_err$response","_err$response$data","login","userData","role","success","saveToken","token","saveUser","_err$response2","_err$response2$data","findUser","localStorage","getItem","JSON","parse","setItem","stringify","useEffect","SearchMovie","movieName","_response$data","_response$data$movie","get","movie","length","state","movies","console","log","error","SearchTheatres","movieTitle","_response$data2","_response$data2$theat","theatres"],"sources":["C:/Users/Vaishnavi/OneDrive/Desktop/moviefrontend/cinemazone/src/hooks/controller.js"],"sourcesContent":["const useController = () => {\r\n  const navigate = useNavigate();\r\n  const [userDetail, setUserDetail] = useState(null);\r\n  const [userLogin, setUserLogin] = useState(false);\r\n  const [isAdmin, setAdmin] = useState(false);\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [searchDetails, setSearchDetails] = useState(null);\r\n  const [TheatreResult, setTheatreResults] = useState([]);\r\n  const [selectedTheatre, setSelectedTheatre] = useState(null);\r\n  const [selectedShowtime, setSelectedShowtime] = useState(null);\r\n\r\n  const signup = async (user) => {\r\n    try {\r\n      const response = await api.post(\"/register\", user);\r\n      alert(response.data.message);\r\n      if (response.data.permission) navigate(\"/login\");\r\n    } catch (err) {\r\n      alert(err.response?.data?.message || \"Signup failed\");\r\n    }\r\n  };\r\n\r\n  const login = async (userData) => {\r\n    try {\r\n      const response = await api.post(\"/user/login\", userData);\r\n      const data = response.data;\r\n\r\n      if (!data || !data.role) return { success: false, message: \"Invalid response from server\" };\r\n\r\n      saveToken(data.token);\r\n      saveUser(userData);\r\n\r\n      setAdmin(data.role === \"admin\");\r\n      navigate(data.role === \"admin\" ? \"/adminhome\" : \"/userhome\");\r\n\r\n      return { success: true, data };\r\n    } catch (err) {\r\n      return { success: false, message: err.response?.data?.message || \"Network error. Please try again.\" };\r\n    }\r\n  };\r\n\r\n  const findUser = () => {\r\n    const user = localStorage.getItem(\"userdetail\");\r\n    if (user) {\r\n      setUserDetail(JSON.parse(user));\r\n      setUserLogin(true);\r\n    } else {\r\n      setUserLogin(false);\r\n    }\r\n  };\r\n\r\n  const saveUser = (user) => localStorage.setItem(\"userdetail\", JSON.stringify(user));\r\n  const saveToken = (token) => localStorage.setItem(\"usertoken\", token);\r\n\r\n  useEffect(() => {\r\n    findUser();\r\n    return () => {}; // ✅ Cleanup function to prevent errors\r\n  }, []);\r\n\r\n  const SearchMovie = async (movieName) => {\r\n    try {\r\n      const response = await api.get(`/movies/name/${movieName}`);\r\n      if (response.data?.movie?.length) {\r\n        setSearchResults(response.data.movie);\r\n        setSearchDetails(movieName);\r\n        navigate(\"/MovieResult\", { state: { movies: response.data.movie } });\r\n      } else {\r\n        console.log(\"No movies found.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const SearchTheatres = async (movieTitle) => {\r\n    try {\r\n      const response = await api.get(`/movies/${movieTitle}/theatres`);\r\n      if (response.data?.theatres?.length) {\r\n        setTheatreResults(response.data.theatres);\r\n        setSearchDetails(movieTitle);\r\n        navigate(\"/TheatreResult\", { state: { theatres: response.data.theatres } });\r\n      } else {\r\n        console.log(\"No theatres found for this movie.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching theatre data:\", error);\r\n    }\r\n  };\r\n\r\n  return {\r\n    signup,\r\n    login,\r\n    userDetail,\r\n    userLogin,\r\n    isAdmin,\r\n    SearchMovie,\r\n    SearchTheatres,\r\n    searchResults,\r\n    searchDetails,\r\n    selectedTheatre,\r\n    selectedShowtime\r\n  };\r\n};\r\n\r\nexport default useController;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}