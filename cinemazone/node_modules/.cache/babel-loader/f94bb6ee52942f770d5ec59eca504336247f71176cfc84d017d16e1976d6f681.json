{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vaishnavi\\\\OneDrive\\\\Desktop\\\\moviefrontend\\\\cinemazone\\\\src\\\\pages\\\\TheatreList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useL } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TheatreList = () => {\n  _s();\n  const {\n    movieTitle\n  } = useParams(); // Get movie title from URL\n  const [theatres, setTheatres] = useState([]);\n  useEffect(() => {\n    fetch(`http://localhost:3800/api/${movieTitle}`).then(res => res.json()).then(data => {\n      if (data.theatres) {\n        setTheatres(data.theatres);\n      } else {\n        console.error(\"No theatres found\");\n      }\n    }).catch(err => console.error(\"Error fetching theatres:\", err));\n  }, [movieTitle]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Available Theatres for \", movieTitle]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(TheatreList, \"CXg/v3SzjQLcWsjbJ/gp0IVffO0=\", false, function () {\n  return [useParams];\n});\n_c = TheatreList;\nexport default TheatreList;\nvar _c;\n$RefreshReg$(_c, \"TheatreList\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useL","jsxDEV","_jsxDEV","TheatreList","_s","movieTitle","theatres","setTheatres","fetch","then","res","json","data","console","error","catch","err","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Vaishnavi/OneDrive/Desktop/moviefrontend/cinemazone/src/pages/TheatreList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useL } from \"react-router-dom\";\r\n\r\nconst TheatreList = () => {\r\n  const { movieTitle } = useParams(); // Get movie title from URL\r\n  const [theatres, setTheatres] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:3800/api/${movieTitle}`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.theatres) {\r\n          setTheatres(data.theatres);\r\n        } else {\r\n          console.error(\"No theatres found\");\r\n        }\r\n      })\r\n      .catch((err) => console.error(\"Error fetching theatres:\", err));\r\n  }, [movieTitle]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Available Theatres for {movieTitle}</h2>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TheatreList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAW,CAAC,GAAGN,SAAS,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACdW,KAAK,CAAC,6BAA6BH,UAAU,EAAE,CAAC,CAC7CI,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACd,IAAIA,IAAI,CAACN,QAAQ,EAAE;QACjBC,WAAW,CAACK,IAAI,CAACN,QAAQ,CAAC;MAC5B,CAAC,MAAM;QACLO,OAAO,CAACC,KAAK,CAAC,mBAAmB,CAAC;MACpC;IACF,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKH,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEE,GAAG,CAAC,CAAC;EACnE,CAAC,EAAE,CAACX,UAAU,CAAC,CAAC;EAEhB,oBACEH,OAAA;IAAAe,QAAA,eACEf,OAAA;MAAAe,QAAA,GAAI,yBAAuB,EAACZ,UAAU;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEzC,CAAC;AAEV,CAAC;AAACjB,EAAA,CAvBID,WAAW;EAAA,QACQJ,SAAS;AAAA;AAAAuB,EAAA,GAD5BnB,WAAW;AAyBjB,eAAeA,WAAW;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}