{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vaishnavi\\\\OneDrive\\\\Desktop\\\\moviefrontend\\\\cinemazone\\\\src\\\\pages\\\\MovieDetails.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport MovieLayout from \"../components/MovieLayout\";\nimport MovieBanner from \"../components/MovieBanner\";\nimport MovieInfo from \"../components/MovieInfo\";\nimport TheatreList from \"../components/TheatreList\";\nimport '../style/moviedetails.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [movie, setMovie] = useState(null);\n  useEffect(() => {\n    fetch(`http://localhost:3800/api/movies/:movieId`).then(res => res.json()).then(data => setMovie(data)).catch(error => console.error(\"Error fetching movie details:\", error));\n  }, [id]);\n  if (!movie) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"loading\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(MovieLayout, {\n    children: [/*#__PURE__*/_jsxDEV(MovieBanner, {\n      posterURL: movie.posterURL,\n      title: movie.title,\n      genre: movie.genre,\n      duration: movie.duration,\n      language: movie.language\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {\n      description: movie.description,\n      rating: movie.rating,\n      onBook: () => navigate(`/book/${movie.id}`)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TheatreList, {\n      theatres: movie.theatres\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(MovieDetails, \"ZZCwcuIGHD0WjwgwfKPwc1vnvlA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = MovieDetails;\nexport default MovieDetails;\nvar _c;\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"names":["useEffect","useState","useParams","useNavigate","MovieLayout","MovieBanner","MovieInfo","TheatreList","jsxDEV","_jsxDEV","MovieDetails","_s","id","navigate","movie","setMovie","fetch","then","res","json","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","posterURL","title","genre","duration","language","description","rating","onBook","theatres","_c","$RefreshReg$"],"sources":["C:/Users/Vaishnavi/OneDrive/Desktop/moviefrontend/cinemazone/src/pages/MovieDetails.js"],"sourcesContent":["import {useEffect, useState} from \"react\"\r\nimport { useParams,  useNavigate } from \"react-router-dom\"\r\nimport MovieLayout from \"../components/MovieLayout\"\r\nimport MovieBanner from \"../components/MovieBanner\"\r\nimport MovieInfo from \"../components/MovieInfo\"\r\nimport TheatreList from \"../components/TheatreList\"\r\nimport '../style/moviedetails.css'\r\n\r\nconst MovieDetails = ()=>{\r\n    const {id} = useParams()\r\n    const navigate = useNavigate()\r\n    const [movie, setMovie] = useState(null)\r\n\r\n    useEffect(()=>{\r\n        fetch(`http://localhost:3800/api/movies/:movieId`)\r\n          .then((res)=>res.json())\r\n          .then((data)=>setMovie(data))\r\n          .catch((error)=>console.error(\"Error fetching movie details:\", error))\r\n    }, [id])\r\n    if(!movie) return <p className=\"loading\">Loading...</p>\r\n\r\n    return (\r\n        <MovieLayout>\r\n            <MovieBanner\r\n               posterURL={movie.posterURL}\r\n               title={movie.title}\r\n               genre={movie.genre}\r\n               duration={movie.duration}\r\n               language={movie.language}\r\n            />\r\n            <MovieInfo\r\n            description={movie.description}\r\n            rating={movie.rating}\r\n            onBook={()=>navigate(`/book/${movie.id}`)}\r\n            />\r\n            <TheatreList theatres={movie.theatres}/>\r\n        </MovieLayout>\r\n    )\r\n}\r\n\r\nexport default MovieDetails"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,SAASC,SAAS,EAAGC,WAAW,QAAQ,kBAAkB;AAC1D,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAO,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,YAAY,GAAGA,CAAA,KAAI;EAAAC,EAAA;EACrB,MAAM;IAACC;EAAE,CAAC,GAAGV,SAAS,CAAC,CAAC;EACxB,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAI;IACVgB,KAAK,CAAC,2CAA2C,CAAC,CAC/CC,IAAI,CAAEC,GAAG,IAAGA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAAEG,IAAI,IAAGL,QAAQ,CAACK,IAAI,CAAC,CAAC,CAC5BC,KAAK,CAAEC,KAAK,IAAGC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC,CAAC;EAC5E,CAAC,EAAE,CAACV,EAAE,CAAC,CAAC;EACR,IAAG,CAACE,KAAK,EAAE,oBAAOL,OAAA;IAAGe,SAAS,EAAC,SAAS;IAAAC,QAAA,EAAC;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAEvD,oBACIpB,OAAA,CAACL,WAAW;IAAAqB,QAAA,gBACRhB,OAAA,CAACJ,WAAW;MACTyB,SAAS,EAAEhB,KAAK,CAACgB,SAAU;MAC3BC,KAAK,EAAEjB,KAAK,CAACiB,KAAM;MACnBC,KAAK,EAAElB,KAAK,CAACkB,KAAM;MACnBC,QAAQ,EAAEnB,KAAK,CAACmB,QAAS;MACzBC,QAAQ,EAAEpB,KAAK,CAACoB;IAAS;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eACFpB,OAAA,CAACH,SAAS;MACV6B,WAAW,EAAErB,KAAK,CAACqB,WAAY;MAC/BC,MAAM,EAAEtB,KAAK,CAACsB,MAAO;MACrBC,MAAM,EAAEA,CAAA,KAAIxB,QAAQ,CAAC,SAASC,KAAK,CAACF,EAAE,EAAE;IAAE;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,eACFpB,OAAA,CAACF,WAAW;MAAC+B,QAAQ,EAAExB,KAAK,CAACwB;IAAS;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEtB,CAAC;AAAAlB,EAAA,CA9BKD,YAAY;EAAA,QACDR,SAAS,EACLC,WAAW;AAAA;AAAAoC,EAAA,GAF1B7B,YAAY;AAgClB,eAAeA,YAAY;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}