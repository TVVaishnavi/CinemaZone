{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vaishnavi\\\\OneDrive\\\\Desktop\\\\moviefrontend\\\\cinemazone\\\\src\\\\pages\\\\TheatreSelect.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TheatreSelection = () => {\n  _s();\n  const {\n    title\n  } = useParams();\n  const [theatres, setTheatres] = useState([]);\n  useEffect(() => {\n    const fetchTheatres = async () => {\n      try {\n        const response = await fetch(`/api/movies/${title}/theatres`);\n        const data = await response.json();\n        setTheatres(data.theatres);\n      } catch (error) {\n        console.error(\"Error fetching theatres:\", error);\n      }\n    };\n    fetchTheatres();\n  }, [title]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Available Theatres for \", title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: theatres.map((theatre, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: theatre.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), \" - \", theatre.location, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 66\n        }, this), \"Showtimes: \", theatre.showTimes.join(\", \")]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(TheatreSelection, \"/S3sRVUKbYh11oeSwBZWsFv/jyo=\", false, function () {\n  return [useParams];\n});\n_c = TheatreSelection;\nexport default TheatreSelection;\nvar _c;\n$RefreshReg$(_c, \"TheatreSelection\");","map":{"version":3,"names":["useState","useEffect","useParams","jsxDEV","_jsxDEV","TheatreSelection","_s","title","theatres","setTheatres","fetchTheatres","response","fetch","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","theatre","index","name","location","showTimes","join","_c","$RefreshReg$"],"sources":["C:/Users/Vaishnavi/OneDrive/Desktop/moviefrontend/cinemazone/src/pages/TheatreSelect.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst TheatreSelection = () => {\r\n  const { title } = useParams();\r\n  const [theatres, setTheatres] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchTheatres = async () => {\r\n      try {\r\n        const response = await fetch(`/api/movies/${title}/theatres`);\r\n        const data = await response.json();\r\n        setTheatres(data.theatres);\r\n      } catch (error) {\r\n        console.error(\"Error fetching theatres:\", error);\r\n      }\r\n    };\r\n\r\n    fetchTheatres();\r\n  }, [title]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Available Theatres for {title}</h2>\r\n      <ul>\r\n        {theatres.map((theatre, index) => (\r\n          <li key={index}>\r\n            <strong>{theatre.name}</strong> - {theatre.location} <br />\r\n            Showtimes: {theatre.showTimes.join(\", \")}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TheatreSelection;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM;IAAEC;EAAM,CAAC,GAAGL,SAAS,CAAC,CAAC;EAC7B,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMS,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAeL,KAAK,WAAW,CAAC;QAC7D,MAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,WAAW,CAACI,IAAI,CAACL,QAAQ,CAAC;MAC5B,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAEDL,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC;EAEX,oBACEH,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,GAAI,yBAAuB,EAACV,KAAK;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvCjB,OAAA;MAAAa,QAAA,EACGT,QAAQ,CAACc,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3BpB,OAAA;QAAAa,QAAA,gBACEb,OAAA;UAAAa,QAAA,EAASM,OAAO,CAACE;QAAI;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,OAAG,EAACE,OAAO,CAACG,QAAQ,EAAC,GAAC,eAAAtB,OAAA;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAChD,EAACE,OAAO,CAACI,SAAS,CAACC,IAAI,CAAC,IAAI,CAAC;MAAA,GAFjCJ,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACf,EAAA,CA/BID,gBAAgB;EAAA,QACFH,SAAS;AAAA;AAAA2B,EAAA,GADvBxB,gBAAgB;AAiCtB,eAAeA,gBAAgB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}