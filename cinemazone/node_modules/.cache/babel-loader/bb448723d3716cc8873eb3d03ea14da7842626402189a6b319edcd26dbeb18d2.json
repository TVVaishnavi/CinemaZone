{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport api from '../api/backend';\nconst Controller = () => {\n  _s();\n  const Navigate = useNavigate();\n  const [userDetail, setUserDetail] = useState(null);\n  const [userLogin, setUserLogin] = useState(false);\n  const [isAdmin, setAdmin] = useState(false);\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchDetails, setSearchDetails] = useState(null);\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedTheatre, setSelectedTheatre] = useState(null);\n  const [selectedShowtime, setSelectedShowtime] = useState(null);\n  const signup = async user => {\n    try {\n      console.log('User Data:', user);\n      const response = await api.post('/register', user);\n      console.log('Response:', response.data.message);\n      if (response.data.permission !== true) {\n        alert(response.data.message);\n      } else {\n        alert('Signup Successful!');\n        Navigate('/login');\n      }\n    } catch (err) {\n      if (err.response) {\n        console.error('Error Response:', err.response.data);\n        alert(err.response.data.message || 'Signup failed');\n      } else {\n        console.error(`ERROR: ${err.message}`);\n        alert('Something went wrong. Please try again.');\n      }\n    }\n  };\n  const findUser = () => {\n    try {\n      const user = localStorage.getItem(\"userdetail\");\n      if (user) {\n        setUserDetail(JSON.parse(user));\n        setUserLogin(true);\n      } else {\n        setUserLogin(false);\n      }\n    } catch (error) {\n      console.error(\"Error retrieving user:\", error);\n    }\n  };\n  const saveUser = user => {\n    try {\n      localStorage.setItem(\"userdetail\", JSON.stringify(user));\n      setUserDetail(user);\n    } catch (error) {\n      console.error(\"Error saving user:\", error);\n    }\n  };\n  const saveToken = token => {\n    try {\n      localStorage.setItem(\"usertoken\", token);\n    } catch (error) {\n      console.error(\"Error saving token\", error);\n    }\n  };\n  const login = async userData => {\n    try {\n      var _response$data;\n      const response = await api.post(\"user/login\", userData);\n      if (response !== null && response !== void 0 && (_response$data = response.data) !== null && _response$data !== void 0 && _response$data.token) {\n        var _response$data2;\n        saveToken(response.data.token);\n        saveUser(userData);\n        findUser();\n        if ((response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.role) === \"admin\") {\n          Navigate(\"/adminhome\");\n          setAdmin(true);\n        } else {\n          setAdmin(false);\n          Navigate('/search');\n        }\n      }\n    } catch (error) {\n      setUserLogin(false);\n      console.error(\"Login Error:\", error.response ? error.response.data : error.message);\n    }\n  };\n  useEffect(() => {\n    findUser();\n  }, []);\n  const SearchTheatre = async theatreData => {\n    try {\n      const response = await api.post('api/search', theatreData);\n      console.log(\"Theatre search Response\", response.data);\n      if (response.data && response.data.length > 0) {\n        setSearchResults(response.data);\n        setSearchDetails(theatreData);\n        Navigate('/theatre-results');\n      } else {\n        alert(\"No theatres found\");\n      }\n    } catch (error) {\n      alert(\"search failed. please try again\");\n    }\n  };\n  const SearchMovie = async movieData => {\n    try {\n      const response = await api.post('/api/movies', movieData);\n      console.log(\"Movie search Response\", response.data);\n      if (response.data && response.data.length > 0) {\n        setSearchResults(response.data);\n        setSearchDetails(movieData);\n        Navigate('/movie-results');\n      } else {\n        alert(\"no movies found\");\n      }\n    } catch (error) {\n      alert(\"search failed. please try again\");\n    }\n  };\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const response = await fetch(`http://localhost:3800/api/movies/:movieId`);\n        if (!response.ok) throw new Error(\"Failed to fetch movoe details\");\n        const data = await response.json();\n        setMovie(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovie();\n  }, [id]);\n  const selectTheatre = theatre => {\n    setSelectedTheatre(theatre);\n    setSelectedShowtime(null);\n  };\n  const selectShowtime = time => {\n    setSelectedShowtime(time);\n  };\n  return {\n    signup,\n    userDetail,\n    userLogin,\n    isAdmin,\n    login,\n    SearchTheatre,\n    SearchMovie,\n    searchDetails,\n    searchResults,\n    handleMovieOrTheatreList,\n    movie,\n    loading,\n    error,\n    selectShowtime,\n    selectTheatre\n  };\n};\n_s(Controller, \"tjF3oWAGN6NO6S7Fsrw7zSXoqiw=\", false, function () {\n  return [useNavigate];\n});\n_c = Controller;\nexport default Controller;\nvar _c;\n$RefreshReg$(_c, \"Controller\");","map":{"version":3,"names":["useState","useEffect","Navigate","useNavigate","api","Controller","_s","userDetail","setUserDetail","userLogin","setUserLogin","isAdmin","setAdmin","searchResults","setSearchResults","searchDetails","setSearchDetails","movie","setMovie","loading","setLoading","error","setError","selectedTheatre","setSelectedTheatre","selectedShowtime","setSelectedShowtime","signup","user","console","log","response","post","data","message","permission","alert","err","findUser","localStorage","getItem","JSON","parse","saveUser","setItem","stringify","saveToken","token","login","userData","_response$data","_response$data2","role","SearchTheatre","theatreData","length","SearchMovie","movieData","fetchMovie","fetch","ok","Error","json","id","selectTheatre","theatre","selectShowtime","time","handleMovieOrTheatreList","_c","$RefreshReg$"],"sources":["C:/Users/Vaishnavi/OneDrive/Desktop/moviefrontend/cinemazone/src/hooks/Controller.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { Navigate, useNavigate } from 'react-router-dom';\r\nimport api from '../api/backend';\r\n\r\nconst Controller = () => {\r\n  const Navigate = useNavigate(); \r\n  const [userDetail, setUserDetail] = useState(null)\r\n  const [userLogin, setUserLogin] = useState(false)\r\n  const [isAdmin, setAdmin] = useState(false)\r\n  const [searchResults, setSearchResults] = useState([])\r\n  const [searchDetails, setSearchDetails] = useState(null)\r\n  const [movie, setMovie] = useState(null)\r\n  const[loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(null)\r\n  const [selectedTheatre, setSelectedTheatre] = useState(null)\r\n  const [selectedShowtime, setSelectedShowtime] = useState(null)\r\n\r\n  const signup = async (user) => {\r\n    try {\r\n      console.log('User Data:', user);\r\n\r\n      const response = await api.post('/register', user);\r\n\r\n      console.log('Response:', response.data.message);\r\n\r\n      if (response.data.permission !== true) { \r\n        alert(response.data.message);\r\n      } else {\r\n        alert('Signup Successful!');\r\n        Navigate('/login'); \r\n      }\r\n    } catch (err) {\r\n      if (err.response) {\r\n        console.error('Error Response:', err.response.data);\r\n        alert(err.response.data.message || 'Signup failed');\r\n      } else {\r\n        console.error(`ERROR: ${err.message}`);\r\n        alert('Something went wrong. Please try again.');\r\n      }\r\n    }\r\n  };\r\n  const findUser = ()=>{\r\n    try {\r\n        const user = localStorage.getItem(\"userdetail\")\r\n        if(user){\r\n            setUserDetail(JSON.parse(user))\r\n            setUserLogin(true)\r\n        }else{\r\n            setUserLogin(false)\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Error retrieving user:\", error)\r\n    }\r\n  }\r\n\r\n  const saveUser = (user)=>{\r\n    try {\r\n        localStorage.setItem(\"userdetail\", JSON.stringify(user))\r\n        setUserDetail(user)\r\n    } catch (error) {\r\n        console.error(\"Error saving user:\", error)\r\n    }\r\n  }\r\n\r\n  const saveToken = (token)=>{\r\n    try {\r\n        localStorage.setItem(\"usertoken\", token)\r\n    } catch (error) {\r\n        console.error(\"Error saving token\", error)\r\n    }\r\n  }\r\n\r\n  const login = async(userData)=>{\r\n    try {\r\n        const response = await api.post(\"user/login\", userData)\r\n        if(response?.data?.token){\r\n            saveToken(response.data.token)\r\n            saveUser(userData)\r\n            findUser()\r\n            \r\n            if(response?.data?.role === \"admin\"){\r\n                Navigate(\"/adminhome\")\r\n                setAdmin(true)\r\n            }else{\r\n                setAdmin(false)\r\n                Navigate('/search')\r\n            }\r\n        }\r\n    } catch (error) {\r\n        setUserLogin(false)\r\n        console.error(\"Login Error:\", error.response ? error.response.data: error.message)\r\n\r\n    }\r\n  }\r\n  useEffect(()=>{\r\n    findUser();\r\n  }, [])\r\n  const SearchTheatre = async(theatreData)=>{\r\n    try {\r\n        const response = await api.post('api/search', theatreData)\r\n        console.log(\"Theatre search Response\", response.data)\r\n\r\n        if(response.data && response.data.length > 0){\r\n            setSearchResults(response.data)\r\n            setSearchDetails(theatreData)\r\n            Navigate('/theatre-results')\r\n        }else{\r\n            alert(\"No theatres found\")\r\n        }\r\n    } catch (error) {\r\n        alert(\"search failed. please try again\")\r\n    }\r\n  }\r\n  \r\n  const SearchMovie = async(movieData)=>{\r\n    try {\r\n        const response = await api.post('/api/movies', movieData)\r\n        console.log(\"Movie search Response\", response.data)\r\n        if(response.data && response.data.length > 0){\r\n            setSearchResults(response.data)\r\n            setSearchDetails(movieData)\r\n            Navigate('/movie-results')\r\n        }else{\r\n            alert(\"no movies found\")\r\n        }\r\n    } catch (error) {\r\n        alert(\"search failed. please try again\")\r\n    }\r\n  }\r\n  useEffect(()=>{\r\n    const fetchMovie = async()=>{\r\n      try {\r\n        const response = await fetch(`http://localhost:3800/api/movies/:movieId`)\r\n        if(!response.ok) throw new Error(\"Failed to fetch movoe details\")\r\n        const data = await response.json()\r\n        setMovie(data)\r\n      } catch (error) {\r\n        setError(error.message)\r\n      } finally{\r\n        setLoading(false)\r\n      }\r\n    }\r\n    fetchMovie()\r\n  }, [id])\r\n\r\n  const  selectTheatre = (theatre)=>{\r\n    setSelectedTheatre(theatre)\r\n    setSelectedShowtime(null)\r\n  }\r\n  const selectShowtime = (time)=>{\r\n    setSelectedShowtime(time)\r\n  }\r\n  return { signup,  userDetail, userLogin, isAdmin, login, SearchTheatre, SearchMovie, searchDetails, searchResults,\r\n    handleMovieOrTheatreList, movie, loading,error, selectShowtime,selectTheatre\r\n  };\r\n};\r\n\r\n\r\nexport default Controller;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}