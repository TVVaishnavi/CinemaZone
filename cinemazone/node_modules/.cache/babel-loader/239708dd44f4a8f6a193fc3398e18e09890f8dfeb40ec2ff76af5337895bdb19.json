{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vaishnavi\\\\OneDrive\\\\Desktop\\\\moviefrontend\\\\cinemazone\\\\src\\\\pages\\\\TheatreSelect.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getTheatresByMovie } from '';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TheatreSelection = () => {\n  _s();\n  const {\n    movieTitle\n  } = useParams();\n  const [theatres, setTheatres] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchTheatres = async () => {\n      try {\n        const data = await getTheatresByMovie(movieTitle);\n        setTheatres(data);\n        setLoading(false);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n    fetchTheatres();\n  }, [movieTitle]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading theatres...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"theatre-selection\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Theatres showing \", movieTitle]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"theatre-list\",\n      children: theatres.map(theatre => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"theatre-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: theatre.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"location\",\n          children: theatre.location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Available Movies: \", theatre.movies.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"select-btn\",\n          children: \"Select Theatre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, theatre._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(TheatreSelection, \"yWNwq1Feivhz5Vtuaku8swhHgTk=\", false, function () {\n  return [useParams];\n});\n_c = TheatreSelection;\nexport default TheatreSelection;\nvar _c;\n$RefreshReg$(_c, \"TheatreSelection\");","map":{"version":3,"names":["React","useEffect","useState","useParams","getTheatresByMovie","jsxDEV","_jsxDEV","TheatreSelection","_s","movieTitle","theatres","setTheatres","loading","setLoading","error","setError","fetchTheatres","data","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","theatre","name","location","movies","join","_id","_c","$RefreshReg$"],"sources":["C:/Users/Vaishnavi/OneDrive/Desktop/moviefrontend/cinemazone/src/pages/TheatreSelect.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getTheatresByMovie } from '';\r\n\r\nconst TheatreSelection = () => {\r\n  const { movieTitle } = useParams();\r\n  const [theatres, setTheatres] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchTheatres = async () => {\r\n      try {\r\n        const data = await getTheatresByMovie(movieTitle);\r\n        setTheatres(data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchTheatres();\r\n  }, [movieTitle]);\r\n\r\n  if (loading) return <div className=\"loading\">Loading theatres...</div>;\r\n  if (error) return <div className=\"error\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"theatre-selection\">\r\n      <h2>Theatres showing {movieTitle}</h2>\r\n      <div className=\"theatre-list\">\r\n        {theatres.map(theatre => (\r\n          <div key={theatre._id} className=\"theatre-card\">\r\n            <h3>{theatre.name}</h3>\r\n            <p className=\"location\">{theatre.location}</p>\r\n            <div className=\"details\">\r\n              <p>Available Movies: {theatre.movies.join(', ')}</p>\r\n            </div>\r\n            <button className=\"select-btn\">\r\n              Select Theatre\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TheatreSelection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}