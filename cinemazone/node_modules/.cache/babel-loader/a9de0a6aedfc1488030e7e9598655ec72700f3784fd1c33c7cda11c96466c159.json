{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vaishnavi\\\\OneDrive\\\\Desktop\\\\moviefrontend\\\\cinemazone\\\\src\\\\components\\\\CreateMovie.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useMovieList } from \"../hooks/controller\"; // Ensure this path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateMovie = () => {\n  _s();\n  const movieContext = useMovieList();\n  if (!movieContext) {\n    throw new Error(\"useMovieList must be used within a MovieProvider\");\n  }\n  const {\n    movies\n  } = movieContext || {\n    movies: []\n  }; // Ensure movies is defined\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"movie-list-title\",\n      children: \"Movies List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"movie-title\",\n        children: \"Movie:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"movie-title\",\n        placeholder: \"Movie title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"New Movie +\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), movies.length > 0 ? movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: movie.title\n    }, movie._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 31\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No movies available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateMovie, \"vi6cW7hyi9SAmGHfKycNFyhRP3w=\", false, function () {\n  return [useMovieList];\n});\n_c = CreateMovie;\nexport default CreateMovie;\nvar _c;\n$RefreshReg$(_c, \"CreateMovie\");","map":{"version":3,"names":["React","useMovieList","jsxDEV","_jsxDEV","CreateMovie","_s","movieContext","Error","movies","children","className","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","placeholder","length","map","movie","title","_id","_c","$RefreshReg$"],"sources":["C:/Users/Vaishnavi/OneDrive/Desktop/moviefrontend/cinemazone/src/components/CreateMovie.js"],"sourcesContent":["import React from \"react\";\r\nimport { useMovieList } from \"../hooks/controller\"; // Ensure this path is correct\r\n\r\nconst CreateMovie = () => {\r\n  const movieContext = useMovieList();\r\n\r\n  if (!movieContext) {\r\n    throw new Error(\"useMovieList must be used within a MovieProvider\");\r\n  }\r\n\r\n  const { movies } = movieContext || { movies: [] }; // Ensure movies is defined\r\n\r\n  return (\r\n    <div>\r\n      {/* Moved \"Movies List\" above the input */}\r\n      <h1 className=\"movie-list-title\">Movies List</h1>\r\n\r\n      {/* Movie Input Field */}\r\n      <div>\r\n        <label htmlFor=\"movie-title\">Movie:</label>\r\n        <input type=\"text\" id=\"movie-title\" placeholder=\"Movie title\" />\r\n      </div>\r\n\r\n      {/* New Movie Button */}\r\n      <button>New Movie +</button>\r\n\r\n      {/* Display Movies List */}\r\n      {movies.length > 0 ? (\r\n        movies.map((movie) => <div key={movie._id}>{movie.title}</div>)\r\n      ) : (\r\n        <p>No movies available</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateMovie;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,qBAAqB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,YAAY,GAAGL,YAAY,CAAC,CAAC;EAEnC,IAAI,CAACK,YAAY,EAAE;IACjB,MAAM,IAAIC,KAAK,CAAC,kDAAkD,CAAC;EACrE;EAEA,MAAM;IAAEC;EAAO,CAAC,GAAGF,YAAY,IAAI;IAAEE,MAAM,EAAE;EAAG,CAAC,CAAC,CAAC;;EAEnD,oBACEL,OAAA;IAAAM,QAAA,gBAEEN,OAAA;MAAIO,SAAS,EAAC,kBAAkB;MAAAD,QAAA,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGjDX,OAAA;MAAAM,QAAA,gBACEN,OAAA;QAAOY,OAAO,EAAC,aAAa;QAAAN,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC3CX,OAAA;QAAOa,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC,aAAa;QAACC,WAAW,EAAC;MAAa;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC,eAGNX,OAAA;MAAAM,QAAA,EAAQ;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAG3BN,MAAM,CAACW,MAAM,GAAG,CAAC,GAChBX,MAAM,CAACY,GAAG,CAAEC,KAAK,iBAAKlB,OAAA;MAAAM,QAAA,EAAsBY,KAAK,CAACC;IAAK,GAAvBD,KAAK,CAACE,GAAG;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAoB,CAAC,CAAC,gBAE/DX,OAAA;MAAAM,QAAA,EAAG;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC1B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACT,EAAA,CA/BID,WAAW;EAAA,QACMH,YAAY;AAAA;AAAAuB,EAAA,GAD7BpB,WAAW;AAiCjB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}