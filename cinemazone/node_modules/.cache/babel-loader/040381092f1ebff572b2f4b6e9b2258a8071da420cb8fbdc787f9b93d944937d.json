{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vaishnavi\\\\OneDrive\\\\Desktop\\\\moviefrontend\\\\cinemazone\\\\src\\\\pages\\\\TheatreList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TheatreList = () => {\n  _s();\n  const {\n    movieTitle\n  } = useParams(); // Get movie title from URL\n  const [theatres, setTheatres] = useState([]);\n  useEffect(() => {\n    fetch(`http://localhost:5000/api/theatres/${movieTitle}`).then(res => res.json()).then(data => {\n      if (data.theatres) {\n        setTheatres(data.theatres);\n      } else {\n        console.error(\"No theatres found\");\n      }\n    }).catch(err => console.error(\"Error fetching theatres:\", err));\n  }, [movieTitle]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Available Theatres for \", movieTitle]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), theatres.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No theatres available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: theatres.map(theatre => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: theatre.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this), \" - \", theatre.location, /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Book Seats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this)]\n      }, theatre._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(TheatreList, \"CXg/v3SzjQLcWsjbJ/gp0IVffO0=\", false, function () {\n  return [useParams];\n});\n_c = TheatreList;\nexport default TheatreList;\nvar _c;\n$RefreshReg$(_c, \"TheatreList\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","TheatreList","_s","movieTitle","theatres","setTheatres","fetch","then","res","json","data","console","error","catch","err","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","theatre","name","location","_id","_c","$RefreshReg$"],"sources":["C:/Users/Vaishnavi/OneDrive/Desktop/moviefrontend/cinemazone/src/pages/TheatreList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst TheatreList = () => {\r\n  const { movieTitle } = useParams(); // Get movie title from URL\r\n  const [theatres, setTheatres] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:5000/api/theatres/${movieTitle}`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.theatres) {\r\n          setTheatres(data.theatres);\r\n        } else {\r\n          console.error(\"No theatres found\");\r\n        }\r\n      })\r\n      .catch((err) => console.error(\"Error fetching theatres:\", err));\r\n  }, [movieTitle]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Available Theatres for {movieTitle}</h2>\r\n      {theatres.length === 0 ? (\r\n        <p>No theatres available</p>\r\n      ) : (\r\n        <ul>\r\n          {theatres.map((theatre) => (\r\n            <li key={theatre._id}>\r\n              <strong>{theatre.name}</strong> - {theatre.location}\r\n              <button>Book Seats</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TheatreList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAW,CAAC,GAAGL,SAAS,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACdU,KAAK,CAAC,sCAAsCH,UAAU,EAAE,CAAC,CACtDI,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACd,IAAIA,IAAI,CAACN,QAAQ,EAAE;QACjBC,WAAW,CAACK,IAAI,CAACN,QAAQ,CAAC;MAC5B,CAAC,MAAM;QACLO,OAAO,CAACC,KAAK,CAAC,mBAAmB,CAAC;MACpC;IACF,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKH,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEE,GAAG,CAAC,CAAC;EACnE,CAAC,EAAE,CAACX,UAAU,CAAC,CAAC;EAEhB,oBACEH,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,GAAI,yBAAuB,EAACZ,UAAU;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAC3Cf,QAAQ,CAACgB,MAAM,KAAK,CAAC,gBACpBpB,OAAA;MAAAe,QAAA,EAAG;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAE5BnB,OAAA;MAAAe,QAAA,EACGX,QAAQ,CAACiB,GAAG,CAAEC,OAAO,iBACpBtB,OAAA;QAAAe,QAAA,gBACEf,OAAA;UAAAe,QAAA,EAASO,OAAO,CAACC;QAAI;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,OAAG,EAACG,OAAO,CAACE,QAAQ,eACnDxB,OAAA;UAAAe,QAAA,EAAQ;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAFpBG,OAAO,CAACG,GAAG;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGhB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjB,EAAA,CAlCID,WAAW;EAAA,QACQH,SAAS;AAAA;AAAA4B,EAAA,GAD5BzB,WAAW;AAoCjB,eAAeA,WAAW;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}