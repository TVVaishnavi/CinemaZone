{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport api from '../api/backend';\nconst Controller = () => {\n  _s();\n  const navigate = useNavigate();\n  const [userDetail, setUserDetail] = useState(null);\n  const [userLogin, setUserLogin] = useState(false);\n  const [isAdmin, setAdmin] = useState(false);\n  const signup = async user => {\n    try {\n      console.log('User Data:', user);\n      const response = await api.post('/register', user);\n      console.log('Response:', response.data.message);\n      if (response.data.permission !== true) {\n        alert(response.data.message);\n      } else {\n        alert('Signup Successful!');\n        navigate('/login');\n      }\n    } catch (err) {\n      if (err.response) {\n        console.error('Error Response:', err.response.data);\n        alert(err.response.data.message || 'Signup failed');\n      } else {\n        console.error(`ERROR: ${err.message}`);\n        alert('Something went wrong. Please try again.');\n      }\n    }\n  };\n  const findUser = () => {\n    try {\n      const user = localStorage.getItem(\"userdetail\");\n      if (user) {\n        setUserDetail(JSON.parse(user));\n        setUserLogin(true);\n      } else {\n        setUserLogin(false);\n      }\n    } catch (error) {\n      console.error(\"Error retrieving user:\", error);\n    }\n  };\n  const saveUser = user => {\n    try {\n      localStorage.setItem(\"userdetail\", JSON.stringify(user));\n      setUserDetail(user);\n    } catch (error) {\n      console.error(\"Error saving user:\", error);\n    }\n  };\n  const login = async userData => {\n    try {\n      var _response$data;\n      const response = await api.post(\"user/login\", userData);\n      if (response !== null && response !== void 0 && (_response$data = response.data) !== null && _response$data !== void 0 && _response$data.token) {\n        var _response$data2;\n        saveToken(response.data.token);\n        saveUser(userData);\n        findUser();\n        if ((response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.role) === \"admin\") {\n          navigate(\"/adminhome\");\n          setAdmin(true);\n        } else {\n          setAdmin();\n        }\n      }\n    } catch (error) {}\n  };\n  return {\n    signup\n  };\n};\n_s(Controller, \"sNtn5svlqiBihqQH8FuSMGLoQ2U=\", false, function () {\n  return [useNavigate];\n});\n_c = Controller;\nexport default Controller;\nvar _c;\n$RefreshReg$(_c, \"Controller\");","map":{"version":3,"names":["useState","useEffect","useNavigate","api","Controller","_s","navigate","userDetail","setUserDetail","userLogin","setUserLogin","isAdmin","setAdmin","signup","user","console","log","response","post","data","message","permission","alert","err","error","findUser","localStorage","getItem","JSON","parse","saveUser","setItem","stringify","login","userData","_response$data","token","_response$data2","saveToken","role","_c","$RefreshReg$"],"sources":["C:/Users/Vaishnavi/OneDrive/Desktop/moviefrontend/cinemazone/src/hooks/Controller.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport api from '../api/backend';\r\n\r\nconst Controller = () => {\r\n  const navigate = useNavigate(); \r\n  const [userDetail, setUserDetail] = useState(null)\r\n  const [userLogin, setUserLogin] = useState(false)\r\n  const [isAdmin, setAdmin] = useState(false)\r\n\r\n  const signup = async (user) => {\r\n    try {\r\n      console.log('User Data:', user);\r\n\r\n      const response = await api.post('/register', user);\r\n\r\n      console.log('Response:', response.data.message);\r\n\r\n      if (response.data.permission !== true) { \r\n        alert(response.data.message);\r\n      } else {\r\n        alert('Signup Successful!');\r\n        navigate('/login'); \r\n      }\r\n    } catch (err) {\r\n      if (err.response) {\r\n        console.error('Error Response:', err.response.data);\r\n        alert(err.response.data.message || 'Signup failed');\r\n      } else {\r\n        console.error(`ERROR: ${err.message}`);\r\n        alert('Something went wrong. Please try again.');\r\n      }\r\n    }\r\n  };\r\n  const findUser = ()=>{\r\n    try {\r\n        const user = localStorage.getItem(\"userdetail\")\r\n        if(user){\r\n            setUserDetail(JSON.parse(user))\r\n            setUserLogin(true)\r\n        }else{\r\n            setUserLogin(false)\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Error retrieving user:\", error)\r\n    }\r\n  }\r\n\r\n  const saveUser = (user)=>{\r\n    try {\r\n        localStorage.setItem(\"userdetail\", JSON.stringify(user))\r\n        setUserDetail(user)\r\n    } catch (error) {\r\n        console.error(\"Error saving user:\", error)\r\n    }\r\n  }\r\n  const login = async(userData)=>{\r\n    try {\r\n        const response = await api.post(\"user/login\", userData)\r\n        if(response?.data?.token){\r\n            saveToken(response.data.token)\r\n            saveUser(userData)\r\n            findUser()\r\n            \r\n            if(response?.data?.role === \"admin\"){\r\n                navigate(\"/adminhome\")\r\n                setAdmin(true)\r\n            }else{\r\n                setAdmin()\r\n            }\r\n        }\r\n    } catch (error) {\r\n        \r\n    }\r\n  }\r\n\r\n\r\n  return { signup };\r\n};\r\n\r\n\r\nexport default Controller;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}