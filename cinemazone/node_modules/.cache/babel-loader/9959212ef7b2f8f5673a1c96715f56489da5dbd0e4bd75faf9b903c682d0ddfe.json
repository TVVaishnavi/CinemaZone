{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:3800/api/movies/:{movieTitle}';\nexport const getTheatresByMovie = async movieTitle => {\n  try {\n    const encodedTitle = encodeURIComponent(movieTitle);\n    const response = await axios.get(`${API_URL}/theatres/movie/${encodedTitle}`);\n    return response.data.theatres;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Error fetching theatres');\n  }\n};","map":{"version":3,"names":["axios","API_URL","getTheatresByMovie","movieTitle","encodedTitle","encodeURIComponent","response","get","data","theatres","error","_error$response","_error$response$data","Error","message"],"sources":["C:/Users/Vaishnavi/OneDrive/Desktop/moviefrontend/cinemazone/src/ServiceApi.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:3800/api/movies/:{movieTitle}';\r\n\r\nexport const getTheatresByMovie = async (movieTitle) => {\r\n  try {\r\n    const encodedTitle = encodeURIComponent(movieTitle);\r\n    const response = await axios.get(`${API_URL}/theatres/movie/${encodedTitle}`);\r\n    return response.data.theatres;\r\n  } catch (error) {\r\n    throw new Error(error.response?.data?.message || 'Error fetching theatres');\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,gDAAgD;AAEhE,OAAO,MAAMC,kBAAkB,GAAG,MAAOC,UAAU,IAAK;EACtD,IAAI;IACF,MAAMC,YAAY,GAAGC,kBAAkB,CAACF,UAAU,CAAC;IACnD,MAAMG,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,GAAGN,OAAO,mBAAmBG,YAAY,EAAE,CAAC;IAC7E,OAAOE,QAAQ,CAACE,IAAI,CAACC,QAAQ;EAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACd,MAAM,IAAIC,KAAK,CAAC,EAAAF,eAAA,GAAAD,KAAK,CAACJ,QAAQ,cAAAK,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBH,IAAI,cAAAI,oBAAA,uBAApBA,oBAAA,CAAsBE,OAAO,KAAI,yBAAyB,CAAC;EAC7E;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}